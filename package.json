{
  "name": "thrust-platform",
  "author": "Hayesmaker Media Ltd @hayes_maker",
  "license": "MIT",
  "version": "2.2.8",
  "private": true,
  "nyc": {
    "include": [
      "src/app/pixi/**/*.js"
    ],
    "require": [
      "babel-register"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "scripts": {
    "create:out": "mkdirp ./out/bundle",
    "start": "pm2 start ./bin/www",
    "build": "./bin/custom-build.sh",
    "build:new": "npm run build:babel && npm run build:pixi",
    "build:babel": "babel ./src/app --out-dir dist --source-maps  --presets es2015",
    "build:pixi": "browserify dist/pixi-main.js -t babelify --outfile public/javascripts/browserify/thrust-engine-pixi.js -d",
    "test": "cross-env NODE_ENV=test mocha --require babel-polyfill --compilers js:babel-register src/test/test.js --reporter nyan",
    "test:basic": "mocha --require babel-polyfill --compilers js:babel-register src/test/test.js",
    "test:report": "cross-env NODE_ENV=test mocha --require babel-polyfill --compilers js:babel-register src/test/test.js --reporter tap",
    "istanbul": "nyc npm test",
    "istanbul:report": "nyc --reporter=lcov npm test",
    "test:list": "npm run browserify:test && npm run mocha",
    "browserify:test": "browserify -t [ babelify ] src/test/test.js -o public/javascripts/test/tests.js -d",
    "mocha": "echo 'Attempting to run mocha bdd style unit tests' && phantomjs ./node_modules/mocha-phantomjs-core/mocha-phantomjs-core.js ./public/javascripts/test/index.html",
    "lint": "eslint src/app/pixi/**/*.js",
    "prebuild": "mkdirp public/javascripts/browserify",
    "build:all": "npm run build:fullgame && npm run build:webgl",
    "build:fullgame": "npm run browserify:canvas:full && npm run uglify:canvas",
    "build:dev": "npm run browserify:canvas:full",
    "build:cordova": "npm run browserify:cordova && npm run uglify:cordova",
    "build:demo": "npm run browserify:canvas && npm run uglify:canvas",
    "build:webgl": "npm run browserify:webgl",
    "getAssets": "curl -O $THRUST_ASSETS_PACK && tar -xzf assets.tar.gz",
    "debug:android": "echo 'Ensure Android device is connected, and has USB debugging enabled' && adb forward tcp:9222 localabstract:chrome_devtools_remote",
    "deploy:skipTests": "npm run heroku",
    "preversion": "npm test -s",
    "browserify:canvas:full": "echo 'browserifying canvas build' && browserify --version && browserify -t [ envify --THRUST_ENV fullgame ] -e src/old/main-canvas.js -o public/javascripts/browserify/thrust-engine-canvas.js -d",
    "browserify:canvas": "echo 'browserifying canvas build' && browserify --version && browserify src/old/main-canvas.js -t [ envify --THRUST_ENV demo ] > public/javascripts/browserify/thrust-engine-canvas.js -d",
    "browserify:mobile": "echo 'browserifying mobile build' && browserify --version && browserify -e src/old/main-mobile.js -o public/javascripts/browserify/thrust-engine-mobile.js -d",
    "browserify:webgl": "echo 'browserifying webgl build' && browserify --version && browserify -e src/old/main-webgl.js -t [ envify --THRUST_ENV fullgame ] > public/javascripts/browserify/thrust-engine-webgl.js -d",
    "browserify:main": "echo 'browserifying auto build' && browserify --version && browserify -e src/old/main-auto.js -o public/javascripts/browserify/thrust-engine-auto.js -d",
    "browserify:cordova": "echo 'browserifying cordova build' && browserify --version && browserify -t [ envify --THRUST_ENV fullgame ] -e src/old/main-cordova.js -o public/javascripts/browserify/thrust-engine-canvas.js -d",
    "uglify:canvas": "echo 'Uglifying bundle' && uglifyjs public/javascripts/browserify/thrust-engine-canvas.js --compress drop_console=true --mangle --source-map -o public/javascripts/browserify/thrust-engine-canvas.min.js",
    "uglify:cordova": "echo 'Uglifying bundle' && mkdirp public-cordova/javascripts/browserify && uglifyjs public/javascripts/browserify/thrust-engine-canvas.js --compress drop_console=true --mangle -o public-cordova/javascripts/browserify/thrust-engine-canvas.min.js",
    "changelog": "echo 'updating changelog' && github_changelog_generator",
    "tweet:deploy": "node ./bin/tweet-deploy",
    "assets": "./bin/assets.sh",
    "heroku": "echo 'Deploying to heroku master' && git push heroku master",
    "update:audio": "echo 'run audiosprite task from dev before running this' && cp -rf ../thrust-platform-dev/_dev/audio/result/ ./public/assets/audiosprite/",
    "heroku:rebuild": "git commit --allow-empty -m 'empty commit' && git push heroku master"
  },
  "dependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.23.1",
    "babel-plugin-istanbul": "^4.0.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-env": "^1.1.6",
    "babel-preset-es2015": "^6.18.0",
    "babel-register": "^6.23.0",
    "babelify": "^7.3.0",
    "basic-auth": "^1.1.0",
    "body-parser": "^1.18.3",
    "brfs": "^1.4.3",
    "browserify": "^16.2.3",
    "browserify-istanbul": "^3.0.1",
    "browserify-shim": "^3.8.6",
    "chai": "^3.5.0",
    "cookie-parser": "~1.3.4",
    "cross-env": "^3.1.4",
    "debug": "^4.1.0",
    "dotenv": "^6.1.0",
    "ensy": "^1.2.1",
    "envify": "^4.1.0",
    "eslint": "^3.16.1",
    "express": "^4.17.3",
    "express-authorization": "^1.0.0",
    "fpsmeter": "^0.3.1",
    "install": "^0.8.3",
    "istanbul": "^0.4.5",
    "lodash": "^4.17.11",
    "mkdirp": "^1.0.4",
    "mocha": "^5.2.0",
    "mocha-phantomjs-core": "^2.1.1",
    "morgan": "^1.9.1",
    "nightwatch": "^1.0.11",
    "npm": "^6.4.1",
    "nyc": "^13.1.0",
    "p2": "^0.7.1",
    "phase-2-e": "^0.2.1",
    "phaser": "^2.6.2",
    "phaser-ce": "^2.7.2",
    "pixi.js": "^4.5.6",
    "pixicam": "git+https://github.com/hayesmaker/lab-pixicam.git",
    "pm2": "^4.4.1",
    "proxyquire": "^1.7.3",
    "proxyquire-universal": "^1.0.8",
    "proxyquireify": "^3.0.0",
    "pug": "^2.0.3",
    "serve-favicon": "^2.5.0",
    "serve-index": "^1.7.2",
    "signals": "^1.0.0",
    "sinon": "^1.17.2",
    "sinon-chai": "^2.8.0",
    "twitter": "^1.2.5",
    "uglify-js": "^3.10.4"
  },
  "description": "Thrust: an awesome 8 bit physics based puzzle/blaster.  Thrust-Platform: A Canvas based HTML5 game engine for making games similar to Thrust",
  "main": "bin/www",
  "keywords": [
    "thrust",
    "phaser"
  ],
  "devDependencies": {}
}
